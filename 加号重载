#include<iostream>
#include<string>
using namespace std;

class Person
{
public:

	//1、成员函数重载加号
	//成员函数的 本质调用 Person p3=p1+p2 ==Person p3=p1.operator+p2
	/*Person operator+(Person& p)
	{
		Person t;
		t.m_a = this->m_a + p.m_a;
		t.m_b = this->m_b + p.m_b;
		return t;
	}*/
	int m_a;
	int m_b;
};

//2、全局函数重载加号
//全局函数的 本质调用 Person p3=p1+p2 ==Person p3=operator+(p1,p2)
Person operator+(Person& p1, Person& p2)
{
	Person t;
	t.m_a = p1.m_a + p2.m_a;
	t.m_b = p1.m_b + p2.m_b;
	return t;
}
Person operator+(Person& p1,int a)
{
	Person t;
	t.m_a = p1.m_a + a;
	t.m_b = p1.m_b + a;
	return t;
}
void test01()
{
	Person p1;
	p1.m_a = 10;
	p1.m_b = 10;
	Person p2;
	p2.m_a = 10;
	p2.m_b = 10;
	Person p3 = p1 + p2;
	cout << p3.m_a << endl;
	//运算符重载也可以发生函数重载；
	Person p4 = p1 + 20;
	cout << "p4.m_a=" << p4.m_a << endl;
	cout << "p4.m_b=" << p4.m_b<< endl;

}
int main()
{
	test01();
}

